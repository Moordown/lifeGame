<!DOCTYPE html> 
<html>
<head>
<style>
.divCell {
	 position:absolute;
	 width:10px;
	 height:10px;
	 border-width:1px;
	 border-style:dotted;
	 border-color:black;
	 background: white;
}
.buttons {
	width: 80%; 
	margin: 0 auto; 
}
#universe {
	position: absolute;
	margin:20px auto;
}
</style>
<script>
var DEAD = 0,
	ALIVE = 1,
	CELL_X_COUNT = 10,
	CELL_Y_COUNT = 10,
	TIMEOUT = 500,
	interval;

//format "x:y"
var activeCell = {};	

function createUniverse() {
	var universe = document.getElementById('universe');
	for(var i = 0; i < CELL_X_COUNT;i++) {
		for(var j = 0; j < CELL_Y_COUNT;j++) {
		    var element = document.createElement('div');

			element.className = 'divCell';
			element.style.left = (i * 11) + 'px';		
			element.style.top = (j * 11) + 'px';
			element.id = "x" + i + "y" + j;
			element.setAttribute("state", DEAD);
			universe.appendChild(element);
		}
	}
}

function cellClick(event) {
	if(event.target.tagName == "DIV")	{
		var cellID = event.target.getAttribute("id");
		var cellX = cellID[1];
		var cellY = cellID[3];
		console.log(cellX, cellY);
		if(event.target.getAttribute("state") == DEAD) {
			event.target.setAttribute("state", ALIVE);
			event.target.style.background = "green";
			activeCell[cellX +":"+cellY]=null;
		}
		else {
			event.target.setAttribute("state", DEAD);
			event.target.style.background = "white"
			delete activeCell[cellX + ":" + cellY];
		}
		console.log(activeCell);
	}
    event.stopPropagation();
}

function getCellState(x, y)
{
	if( x < 0 || x > CELL_X_COUNT || y < 0 || y > CELL_Y_COUNT)	{
		return null;
	}
	var cell = document.getElementById("x" + x + "y" + y);

	return cell !== null ? cell.getAttribute("state") : 0;
}

function setCellState(x, y, deadOrAlive){	

	if( x < 0 || x > CELL_X_COUNT || y < 0 || y > CELL_Y_COUNT)	{
		return;
	}
	var cell = document.getElementById("x" + x + "y" + y);
	cell.setAttribute("state", deadOrAlive);
	
	cell.style.background = 
		deadOrAlive == DEAD ? "white" : "green";
}

function Cell(x,y)
{
	this.X = x;
	this.Y = y;
	this.toString = function() {
		return x + ":" + y;
	}
}

function willLive(neighboor, cell)
{
	amountLive = 0;
	
	for(candidate of neighboor)
	{
		if (getCellState(candidate.X, candidate.Y) == ALIVE)
			amountLive++;
	}
	/*
	console.log(cell);
	console.log('cellState ' + getCellState(cell.X, cell.Y));
	console.log(neighboor);
	console.log(amountLive);
	*/
	if (getCellState(cell.X, cell.Y) == ALIVE)
		// 6|{2,3} - cell will live, otherwise won't
		return +(amountLive === 2 || amountLive === 3);
	else
		return +(amountLive === 3);
}

function getNeighboor(x, y)
{
	var neighboor = [];
	for(var dx=-1; dx<2; dx++)
		for(var dy=-1; dy<2; dy++)
			if (dx !== 0 || dy !== 0)
				neighboor.push(new Cell(+x+dx, +y+dy));
	return neighboor;
}

function lifeStep() {
	var newActiveCell = {};
	for (var actCell in activeCell)
	{
		var coord = actCell.split(":")
		var curCell = new Cell(coord[0], coord[1]);
		var neighboors = getNeighboor(curCell.X, curCell.Y);
		console.log(neighboors);
		for(var neighboor of neighboors)
		{
			var doubleNeighboors = getNeighboor(neighboor.X, neighboor.Y);
			var tempVal = willLive(doubleNeighboors, neighboor);
			if (tempVal === ALIVE)
				newActiveCell[neighboor.toString()]=null;
		}
	}
	for (var actCell in activeCell)
	{
		var coord = actCell.split(":")
		var curCell = new Cell(coord[0], coord[1]);
		var val = willLive(neighboors, curCell);
		if (val === ALIVE)
			newActiveCell[actCell]=null;
		else
			setCellState(curCell.X, curCell.Y, DEAD);
	}
	Object.assign(activeCell, newActiveCell);
	for(cell in activeCell)
	{
		var coord = cell.split(":");
		setCellState(coord[0], coord[1], ALIVE);
	}
	var iterations = document.getElementById('iterations');
	iterations.innerHTML=Math.ceil(Math.random() * 100);
	console.log(activeCell);
}

function startLife() {
	interval = setInterval(lifeStep, TIMEOUT);
}

function pauseLife() {
	clearInterval(interval);
}

function killLife() {
	pauseLife();	
	for(var i = 0; i < CELL_X_COUNT; i++) {
			for(var j = 0; j < CELL_Y_COUNT; j++) {
				setCellState(i, j, DEAD);
		}
	}
}

</script>
</head>
<body onload="createUniverse();" onclick="cellClick(event)">
	<div style="margin:10px auto; width:800px;">
		<h1>Conway's game of life</h1>
		<div id="iterations"></div>
		<div state="0" class="buttons">
			<button onclick="startLife()">Start Life</button>
			<button onclick="pauseLife()">Pause Life</button>
			<button onclick="killLife()">Kill Life</button>
		</div>
		<div id='universe'></div>
	</div>
</body>
</html>
